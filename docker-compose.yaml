version: '3.9'

services:
  redis:
    image: redis:latest
    container_name: redis_container
    environment:
      - REDIS_PASSWORD=9898
    ports:
      - "6380:6379"
    volumes:
      - ./redisdata:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "9898", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    tty: true
    stdin_open: true
    command: redis-server --requirepass 9898

  mysql:
    image: mysql:8.0
    container_name: mysql_container
    environment:
      - MYSQL_ROOT_PASSWORD=9898
      - MYSQL_DATABASE=alembic_async
    ports:
      - "3307:3306"
    networks:
      - my_network
    volumes:
      - ./mysql_data:/var/lib/mysql
    restart: unless-stopped

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: celery_container
    depends_on:
      redis:
        condition: service_healthy
    environment:
      - CELERY_BROKER_URL=redis://:9898@redis:6379/0
      - CELERY_RESULT_BACKEND=redis://:9898@redis:6379/0
    restart: unless-stopped
    tty: true
    stdin_open: true
    volumes:
      - .:/app
    command: celery -A celery worker -l info

  fastapi:
    build:
      context: .  # Контекст для сборки (путь к текущей папке)
      dockerfile: Dockerfile  # Путь к файлу Dockerfile
    container_name: fastapi_container
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=mysql+aiomysql://root:9898@mysql:3306/alembic_async
    depends_on:
      - redis
      - mysql
    networks:
      - my_network
    volumes:
      - .:/usr/src/app
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000

networks:
  my_network:
    driver: bridge

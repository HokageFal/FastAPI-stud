version: '3.9'

services:
  redis:
    image: redis:latest
    container_name: redis_container
    environment:
      - REDIS_PASSWORD=9898
    ports:
      - "6380:6379"
    volumes:
      - ./redisdata:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "9898", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    command: redis-server --requirepass 9898  # Включаем защиту с паролем

  postgres:
    image: postgres:17
    container_name: postgres_container
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=9898
      - POSTGRES_DB=alembic_async
    ports:
      - "5433:5432"
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  celery:
    build: .
    container_name: celery_container
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      - CELERY_BROKER_URL=redis://:9898@redis:6379/0
      - CELERY_RESULT_BACKEND=redis://:9898@redis:6379/0
      - DATABASE_URL=postgresql+asyncpg://postgres:9898@postgres:5432/alembic_async
      - PYTHONPATH=/code
    restart: unless-stopped
    volumes:
      - .:/code
    command: celery -A celery_app worker -l info

  fastapi:
    build: .
    container_name: fastapi_container
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:9898@postgres:5432/alembic_async
      - REDIS_URL=redis://:9898@redis:6379/0
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/code
    restart: unless-stopped

networks:
  default:
    name: my_network
    driver: bridge
